version: "3.9"
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:5.3.1
    hostname: zookeeper
    container_name: traderius-development-zookeeper
    ports: [ "2181:2181" ]
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes: [ "./volumes/zookeeper:/var/lib/zookeeper/data" ]
    restart: unless-stopped

  kafka:
    image: confluentinc/cp-enterprise-kafka:5.3.1
    hostname: kafka
    container_name: traderius-development-kafka
    depends_on: [ zookeeper ]
    ports: [ "9092:9092" ]
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
    volumes: [ "./volumes/kafka:/var/lib/kafka/data" ]
    restart: unless-stopped

  kafka-ui:
    image: provectuslabs/kafka-ui:master
    container_name: traderius-development-kafka-ui
    depends_on: [ kafka ]
    ports: [ "8080:8080" ]
    environment:
      - KAFKA_CLUSTERS_0_NAME=kafka-cluster
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:29092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
    restart: unless-stopped

  mailhog:
    image: mailhog/mailhog
    container_name: traderius-development-mailhog
    ports: [ "1025:1025", "8025:8025" ]
    volumes: [ "./volumes/mailhog:/data" ]
    restart: unless-stopped

  redis:
    image: redis:latest
    container_name: traderius-development-redis
    ports: [ "6379:6379" ]
    volumes:
      - ./volumes/redis/data:/data
    restart: unless-stopped

  redis-ui:
    image: ghcr.io/joeferner/redis-commander:latest
    container_name: traderius-development-redis-ui
    ports: [ "8081:8081" ]
    environment:
      - REDIS_HOSTS=local:redis:6379
    depends_on: [ redis ]
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: traderius-development-prometheus
    ports: [ "9090:9090" ]
    expose: [ 9801, 9803 ]
    command:
    - --config.file=/etc/prometheus/prometheus.yml
    volumes:
    - ./configs/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    restart: unless-stopped

  postgres:
    image: postgres:14.2-alpine
    container_name: traderius-development-postgres
    ports: [ "5432:5432" ]
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "Pa$$word13!"
      POSTGRES_DB: "traderius"
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - ./volumes/postgres:/var/lib/postgresql/data
    restart: unless-stopped
